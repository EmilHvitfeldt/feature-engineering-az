# Preface {.unnumbered}

Welcome to "Feature Engineering A-Z"! This book is written to be used as a reference guide to nearly all feature engineering methods you will encounter. This is reflected in the chapter structure. Any question a practitioner is having should be answered by looking at the index and finding the right chapter.

Each section tries to be as comprehensive as possible with the number of different methods and solutions that are presented. A section on dimensionality reduction should list all the practical methods that could be used, as well as a comparison between the methods to help the reader decide what would be most appropriate. This does not mean that all methods are recommended to use. A number of these methods have little and narrow use cases. Methods that are deemed too domain-specific have been excluded from this book. 

::: {.callout-note}
# Missing methods

If you think this book is missing a method, then please [file an issue](https://github.com/EmilHvitfeldt/feature-engineering-az/issues/new?assignees=&labels=Request:+New+Method&projects=&template=request-new-method.md&title=) and we will evaluate if it should be added.
:::

Each chapter will cover a specific method or small group of methods. This will include motivations and explanations for the method. Whenever possible each method will be accompanied by mathematical formulas and visualizations to illustrate the mechanics of the method. A small pros and cons list is provided for each method. Lastly, each section will include code snippets showcasing how to implement the methods. This is done in R and Python, using [tidymodels](https://tidymodels.org) and [scikit-learn](https://scikit-learn.org/) respectively. This book is a methods book first, and a coding book second.

::: {.callout-note}
# Empty chapters

A chapter is prefixed with the emoji üèóÔ∏è to indicate that it hasn't been fully written yet.
:::

## What does this book not cover?

To keep the scope of this book as focused as possible, the following topics will not be covered in this book:

- whole process modeling
- case studies
- deployment details
- domain-specific methods

For whole process modeling see instead "Hands-On Machine Learning with Scikit-learn, Keras & Tensorflow" [-@geron2017hands-on], "Tidy modeling with R" [-@kuhn2022tidy], "Approaching (almost) any machine learning problem" [-@thakur2020approaching] and "Applied Predictive Modeling" [-@kuhn2013applied] are all great resources. For feature engineering books that tell more of a story by going through case studies, I recommended: "Python Feature Engineering Cookbook" [-@galli2020python], "Feature Engineering Bookcamp" [-@ozdemir2022feature] And "Feature Engineering and Selection" [-@kuhn2019feature]. I have found that books on deployment domain-specific methods are highly related to the field and stack that you are using and am not able to give broad advice.

## Who is this book for?

This book is designed to be used by people involved in the modeling of data. These can include but are not limited to data scientists, students, professors, data analysts and machine learning engineers. The reference style nature of the book makes it useful for beginners and seasoned professionals. A background in the basics of modeling, statistics and machine learning would be helpful. Feature engineering as a practice is tightly connected to the rest of the machine learning pipeline so knowledge of the other components is key.  

Many educational resources skip over the finer details of feature engineering methods, which is where this book tries to fill the gap. 

## License

This book is licensed to you under [Creative Commons Attribution-NonCommercial-NoDerivatives 4.0 International License](https://creativecommons.org/licenses/by-nc-nd/4.0/).

## Rendering details

```{r}
#| label: language-versions
#| echo: false

quarto_version <- paste0("(", system("quarto --version", intern = TRUE), ")")

python_version <- paste0("(", gsub("Python ", "", system("python3 --version", intern = TRUE)), ")")

r_version <- paste0("(", R.version$major, ".", R.version$minor, ")")
```

This book is rendered using [quarto](https://quarto.org/) `r quarto_version`, [R](https://www.r-project.org/) `r python_version` and [Python](https://www.python.org/) `r_version`. The website source is hosted on [Github](https://github.com/EmilHvitfeldt/feature-engineering-az).

```{r}
#| label: preface-versions
#| include: false

get_pkg_depends <- function() {
  info <- read.dcf("DESCRIPTION")
  pkgs <- strsplit(info[, "Imports"], "\\n")[[1]]
  pkgs <- purrr::map_chr(pkgs, ~ gsub(",", "", .x))
  pkgs <- strsplit(pkgs, " ")
  pkgs <- purrr::map_chr(pkgs, ~ .x[1])
  pkgs
}

make_matrix <- function(x, cols = 3) {
  remainder <- length(x) %% cols
  padding <- cols - remainder
  if (padding > 0) {
    x <- c(x, rep(" ", padding))
  }
  matrix(x, ncol = 3, byrow = TRUE)
}

write_pkg_list <- function() {
  pkgs <- get_pkg_depends()
  excld <- c()
  pkgs <- pkgs[!(pkgs %in% excld)]
  loaded <-
    purrr::map(pkgs,
               ~ try(
                 suppressPackageStartupMessages(
                   library(.x, character.only = TRUE, quietly = TRUE)
                 ),
                 silent = TRUE
               )
    )
  # Write to repo root
  nm <- paste0("session-info-", Sys.info()["user"], "-", Sys.info()["machine"], ".txt")
  # sessioninfo::session_info(to_file = nm)
  # Save for text
  si <-
    sessioninfo::session_info()$packages %>%
    tibble::as_tibble() %>%
    dplyr::filter(package %in% pkgs)
  pkgs <- purrr::map2_chr(si$package, si$loadedversion, ~ paste0("`", .x, "` (", .y, ")"))
  make_matrix(pkgs)
}
```

The following R packages are used to render the book, with [tidymodels](https://www.tidymodels.org/), [recipes](https://recipes.tidymodels.org/), [embed](https://embed.tidymodels.org/), [themis](https://themis.tidymodels.org/), [textrecipes](https://textrecipes.tidymodels.org/) and [timetk](https://business-science.github.io/timetk/) being the main packages.

```{r}
#| label: write-pkg-versions
#| echo: false
#| results: asis

knitr::kable(write_pkg_list())
```

The following Python libraries are used to render the book, with [scikit-learn](https://scikit-learn.org/) and [feature-engine](https://feature-engine.trainindata.com/en/latest/) being the main ones.

```{r}
#| label: write-poetry-versions
#| echo: false
#| results: asis

pypackages <- readLines("poetry.lock") |>
  paste(collapse = "\n") |>
  strsplit(split = "\\[\\[package\\]\\]")

pypackages <- unlist(pypackages[[1]][-1])

pypackages_names <- stringr::str_extract(pypackages, "name = .*") |>
  stringr::str_remove("name = \"") |>
  stringr::str_remove("\"")

pypackages_versions <- stringr::str_extract(pypackages, "version = .*") |>
  stringr::str_remove("version = \"") |>
  stringr::str_remove("\"")

glue::glue("`{pypackages_names}` ({pypackages_versions})") |> 
  make_matrix() |>
  knitr::kable()
```

## Acknowledgements

I'm so thankful for the contributions, help, and perspectives of people who have supported us in this project. There are several I would like to thank in particular.

I would like to thank my Posit colleagues on the tidymodels team (Hannah Frick, Max Kuhn, and Simon Couch) as well as the rest of our coworkers on the Posit open-source team. I also thank Javier Orraca-Deatcu, Matt Dancho and Mike Mahoney for looking over some of the chapters before the first release. 

```{r, eval = FALSE, echo = FALSE}
library(tidyverse)
contribs_all_json <- gh::gh("/repos/:owner/:repo/contributors",
  owner = "EmilHvitfeldt",
  repo = "feature-engineering-az",
  .limit = Inf
)
contribs_all <- tibble(
  login = contribs_all_json %>% map_chr("login"),
  n = contribs_all_json %>% map_int("contributions")
)
contribs_old <- read_csv("contributors.csv", col_types = list())
contribs_new <- contribs_all %>% anti_join(contribs_old, by = "login")
# Get info for new contributors
needed_json <- map(
  contribs_new$login, 
  ~ gh::gh("/users/:username", username = .x)
)
info_new <- tibble(
  login = contribs_new$login,
  name = map_chr(needed_json, "name", .default = NA),
  blog = map_chr(needed_json, "blog", .default = NA)
)
info_old <- contribs_old %>% select(login, name, blog)
info_all <- bind_rows(info_old, info_new)
contribs_all <- bind_rows(contribs_old, contribs_new)
contribs_all <- contribs_all %>% 
  left_join(info_all, by = "login") %>% 
  arrange(login)
write_csv(contribs_all, "contributors.csv")
```

```{r, results = "asis", echo = FALSE, message = FALSE}
library(dplyr)
contributors <- read.csv("contributors.csv", stringsAsFactors = FALSE)
contributors <- contributors %>% 
  filter(!login %in% c("EmilHvitfeldt")) %>% 
  mutate(
    login = paste0("\\@", login),
    desc = ifelse(is.na(name), login, paste0(name, " (", login, ")"))
  )
cat("This book was written in the open, and multiple people contributed via pull requests or issues. Special thanks goes to the ", xfun::n2w(nrow(contributors)), " people who contributed via GitHub pull requests (in alphabetical order by username): ", sep = "")
cat(paste0(contributors$desc, collapse = ", "))
cat(".\n")
```
