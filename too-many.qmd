# Overview {#sec-too-many}

There will be times were you are given a lot of variables in your data set. This by itself may not be a problem. but it could come with some drawbacks. Many models will have slower fit times at best, and worse performance at worst. It is likely that not all your variables are beneficial in your model. They could be uninformative, correlated or contain redundant information. We look at ways to deal with correlated features in @sec-correlated, but there will also be methods here to accomplish similar goals.

Suppose the same variable is included twice in your model. Both will not be able to be used in your model at the same time. Once one is included, the other becomes irrelevant. In essence these two variables are completely correlated, thus we need to deal with this type of problem as well.

The overarching name for these types of methods are **dimensionality reduction** and **feature selection**, and we will cover most of these methods here.

## Non-zero Variance filtering

These types of methods are quite simple, we remove variables that takes a few number of values. If the value is always 1 then it doesn't have any information in it and we should remove. It the variables are almost always the same we might want to remove them. We look at these methods in @sec-too-many-zv.

## Dimensionality reduction

The bulk of the chapter will be in this category. 

## Feature selection

