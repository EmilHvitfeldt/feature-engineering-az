# Where does feature engineering fit into the modeling workflow? {#sec-modeling .unnumbered}

When we talk about the modeling workflow, it starts at the data source, and ends with a fitted model. The fitted model in this instance should be created such that it can be used for the downstream task, be it inference or prediction. We want to make sure that the feature engineering methods we are applying are done correctly as to avoid problem with the modeling. Things we especially want to avoid is **data leakage**, **overfitting**, and high computational cost.

TODO: Add diagram of modeling workflow from data source to model

When applying feature engineering methods, we need to think about **trained** and **untrained** methods. Trained methods will perform a calculation doing the training of the method, and then using the extracted values to perform the transformation again. We see this in @sec-numeric-normalization, where we do centering. To do centering we subtract the mean value of the variable, calculated based on the training data set. Since this value needs to be calculated, it becomes a trained method. Examples of untrained methods are logarithmic transformation as seen in @sec-numeric-logarithms and datetime value extraction as seen in @sec-datetime-extraction. These methods are static in the sense the way they are performed doesn't need any parameters.

In practice this means that untrained methods can be applied before the data-splitting procedure, as it would give the same results regardless on when it was done. Trained methods have to be performed after the data-splitting to ensure you don't have data leakage. The wrinkle to this is that untrained methods applied to variables that has already been transformed by a trained method will have to also be done after the data-splitting.

TODO: add diagram for untrained / trained rule

Some untrained methods have a high computational cost, such as BERT from @sec-text-bert. A general advice that errs on the side of safety is to do as much as you can after the data-splitting if you are unsure.
